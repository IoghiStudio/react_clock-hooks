{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","name","useState","Date","date","setDate","timerId","useEffect","window","setInterval","console","info","toUTCString","slice","clearInterval","debug","className","App","clockname","setClockname","hasClock","setHasClock","leftClickHandler","rightClickHandler","event","preventDefault","value","now","toString","getRandomName","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"oLAOaA,EAAyB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvC,EAAwBC,mBAAS,IAAIC,MAArC,mBAAOC,EAAP,KAAaC,EAAb,KAEIC,EAAU,EAiBd,OAfAC,qBAAU,WAMR,OALAD,EAAUE,OAAOC,aAAY,WAC3BJ,EAAQ,IAAIF,MACZO,QAAQC,KAAKP,EAAKQ,cAAcC,OAAO,IAAK,MAC3C,KAEI,WACLL,OAAOM,cAAcR,MAEtB,IAEHC,qBAAU,WACRG,QAAQK,MAAR,uBAA8Bd,EAA9B,eAAyCA,MACxC,CAACA,IAGF,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCf,IAEhC,YAED,sBAAMe,UAAU,cAAhB,SACGZ,EAAKQ,cAAcC,OAAO,IAAK,SCxBjC,IAAMI,EAAgB,WAC3B,MAAkCf,mBAAS,WAA3C,mBAAOgB,EAAP,KAAkBC,EAAlB,KACA,EAAgCjB,oBAAS,GAAzC,mBAAOkB,EAAP,KAAiBC,EAAjB,KAEIf,EAAU,EAERgB,EAAmB,WACvBD,GAAY,IAGRE,EAAoB,SAACC,GACzBA,EAAMC,iBAENJ,GAAY,IAkBd,OAfAd,qBAAU,WAQR,OAPAD,EAAUE,OAAOC,aAAY,WAC3BU,EAxBN,WACE,IAAMO,EAAQvB,KAAKwB,MAAMC,WAAWf,OAAO,GAE3C,MAAM,SAAN,OAAgBa,GAqBCG,MACZ,MAEHC,SAASC,iBAAiB,cAAeR,GACzCO,SAASC,iBAAiB,QAAST,GAE5B,WACLd,OAAOM,cAAcR,GACrBwB,SAASE,oBAAoB,cAAeT,GAC5CO,SAASE,oBAAoB,QAASV,MAEvC,IAGD,sBAAKN,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mCAECI,GACC,cAAC,EAAD,CAAOnB,KAAMiB,QC3CrBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,U","file":"static/js/main.719c15ee.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\n\ntype Props = {\n  name: string;\n};\n\nexport const Clock: React.FC<Props> = ({ name }) => {\n  const [date, setDate] = useState(new Date());\n\n  let timerId = 0;\n\n  useEffect(() => {\n    timerId = window.setInterval(() => {\n      setDate(new Date());\n      console.info(date.toUTCString().slice(-12, -4));\n    }, 1000);\n\n    return () => {\n      window.clearInterval(timerId);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.debug(`Renamed from ${name} to ${name}`);\n  }, [name]);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">{name}</strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">\n        {date.toUTCString().slice(-12, -4)}\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [clockname, setClockname] = useState('Clock-0');\n  const [hasClock, setHasClock] = useState(true);\n\n  let timerId = 0;\n\n  const leftClickHandler = () => {\n    setHasClock(true);\n  };\n\n  const rightClickHandler = (event: MouseEvent) => {\n    event.preventDefault();\n\n    setHasClock(false);\n  };\n\n  useEffect(() => {\n    timerId = window.setInterval(() => {\n      setClockname(getRandomName());\n    }, 3300);\n\n    document.addEventListener('contextmenu', rightClickHandler);\n    document.addEventListener('click', leftClickHandler);\n\n    return () => {\n      window.clearInterval(timerId);\n      document.removeEventListener('contextmenu', rightClickHandler);\n      document.removeEventListener('click', leftClickHandler);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">That is not a clock..</h1>\n\n      {hasClock && (\n        <Clock name={clockname} />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}